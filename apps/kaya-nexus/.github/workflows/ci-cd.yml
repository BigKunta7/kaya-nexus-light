name: CI/CD Kaya Nexus

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Installation de PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Installation des dépendances
        run: pnpm install --frozen-lockfile
      
      - name: Lint
        run: pnpm --filter kaya-nexus lint
      
      - name: Tests unitaires
        run: pnpm --filter kaya-nexus test
      
      - name: Build
        run: pnpm --filter kaya-nexus build

  e2e-tests:
    runs-on: ubuntu-latest
    needs: lint-test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Installation de PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Installation des dépendances
        run: pnpm install --frozen-lockfile
      
      - name: Tests E2E
        run: pnpm --filter kaya-nexus test:e2e
        env:
          CYPRESS_BASE_URL: http://localhost:3000
          
  deploy:
    runs-on: ubuntu-latest
    needs: [lint-test, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Installation de PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Installation des dépendances
        run: pnpm install --frozen-lockfile
      
      - name: Build
        run: pnpm --filter kaya-nexus build
      
      # Déploiement sur Vercel en utilisant la CLI officielle
      - name: Installation de Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Déploiement sur Vercel
        run: |
          cd ./apps/kaya-nexus
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        # Vous devrez configurer ces secrets dans les paramètres du dépôt GitHub
        # VERCEL_TOKEN: Token d'API Vercel (généré dans les paramètres de votre compte Vercel)
        # VERCEL_ORG_ID: ID de votre organisation Vercel
        # VERCEL_PROJECT_ID: ID du projet Vercel
